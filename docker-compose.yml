services:
  mysql:
    build:
      context: ./data-init
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: fantasy7&
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - app-network

  magento:
    build: ./magento
    volumes:
      - ${PWD}/letsencrypt/:/var/www/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    environment:
      MAGENTO_DB_HOST: mysql
      MAGENTO_DB_NAME: ${DB_NAME}
      MAGENTO_DB_USER: ${DB_USER}
      MAGENTO_DB_PASSWORD: ${DB_PASSWORD}
      MAGENTO_DOMAIN: ${BACKEND_HOST}
      MAGENTO_ELASTICSEARCH_HOST: elasticsearch
    container_name: magento
    depends_on:
      - mysql
      - elasticsearch
    networks:
      - app-network

  backend:
    build:
      context: ./boxtool/src
      args:
        BACKEND_DB_NAME: ${DB_NAME}
        BACKEND_DB_USER: ${DB_USER}
        BACKEND_DB_PASSWORD: ${DB_PASSWORD}
        BACKEND_DB_HOST: mysql
    container_name: backend
    restart: unless-stopped
    depends_on:
        - mysql
    networks:
      - app-network

  frontend:  
    build:
      context: ./boxtool/ui
      args: 
        BACKEND_HOST: ${BACKEND_HOST}
    restart: unless-stopped
    container_name: frontend
    stdin_open: true
    tty: true
    command: npm start
    depends_on:
      - mysql
      - backend
      - magento
    networks:
      - app-network
networks:
  app-network:
    driver: bridge